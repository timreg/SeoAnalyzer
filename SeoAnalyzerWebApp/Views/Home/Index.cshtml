@model SeoAnalyzerWebApp.Models.DtoReportOptions
@{
    ViewBag.Title = "Home";
    Html.EnableUnobtrusiveJavaScript(true);
}
<div class="container">
    <div class="row">
        <div class="col-sm-8">
            <h2>SEO Analyzer</h2>
            <hr>
        </div>
    </div>
</div>

@* Main options form *@
<div class="container" id="DivOptions">
    <div class="row">
        <div class="col-sm-8 col-md-offset-2">

            <p>Put english text or URL in text field below, select required options and press Analyze! All non-latin letters will be ignored.</p>
            @using (Ajax.BeginForm("GetReport", "Home", new AjaxOptions
            {
                HttpMethod = "POST"
                    ,
                InsertionMode = InsertionMode.Replace
                    ,
                UpdateTargetId = "ReportResult"
                    ,
                OnSuccess = "$('html, body').animate({scrollTop: $('#ReportResult').offset().top}, 1000);"
                    ,
                OnComplete = "$('#ReportResultStatus').val('error')"
                    ,
                OnFailure = "$('#ReportResultStatus').val('fail')"
                    ,
                OnBegin = "$('#ReportResult').empty()"
                    ,
                LoadingElementId = "LoaderResult"
                    ,
                LoadingElementDuration = 1000

            }))
            {
                @Html.AntiForgeryToken()

                <div class="form-group">
                    <label for="SourceString">Text or url</label><br />
                    <small class="lig">
                        Some examples:
                        <a href="#" onclick="$('#SourceString').val('http://stackoverflow.com/questions/13370265/passing-data-to-controller-using-ajax-actionlink');">URL1</a> |
                        <a href="#" onclick="$('#SourceString').val('https://damienbod.com/2013/07/11/simple-mvc-application-using-standard-validation/')">URL2</a> |
                        <a href="#" onclick="$('#SourceString').val('http://www.lipsum.com')">URL3</a> |
                        <a href="#" onclick="$('#SourceString').val('Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.')">Text1</a> |
                        <a href="#" onclick="$('#SourceString').val('It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using Content here, content here, making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for lorem ipsum will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like')">Text2</a>
                    </small>

                    @Html.TextAreaFor(m => m.SourceString
                           , new { @class = "form-control", @style = "min-width:100%; overflow:hidden;", @rows = "1" }
                          )
                    @ViewData.ModelState["SourceString"]
                    @Html.ValidationMessageFor(model => model.SourceString)
                </div>

                <div class="checkbox">
                    @Html.CheckBoxFor(f => f.OptFilterStopWords, new { @checked = 1 })
                    <label for="OptFilterStopWords">Filter stop words</label>
                </div>
                <div class="checkbox">
                    @Html.CheckBoxFor(f => f.OptCalcOccurAll, new { @checked = 1 })
                    <label for="OptCalcOccurAll">Calculate number of occurrences on the page of each word</label>
                </div>
                <div class="checkbox">
                    @Html.CheckBoxFor(f => f.OptCalcOccurMeta, new { @checked = 1 })
                    <label for="OptCalcOccurMeta">Calculate number of occurrences on the page of each word listed in meta tags</label>
                </div>
                <div class="checkbox">
                    @Html.CheckBoxFor(f => f.OptCalcOccurExtLinks, new { @checked = 1 })
                    <label for="OptCalcOccurExtLinks">Calculate number of external links in the text</label>
                </div>

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <button type="submit" class="btn btn-success"><i class="glyphicon glyphicon-search"></i> Analyze</button>
                    <button type="button" class="btn btn-warning" onclick="$('#SourceString').val('');"><i class="glyphicon glyphicon-remove"></i> Clear</button>
                </div>

            }
        </div>
    </div>
</div>
<div class="container">
    <div class="row" id="LoaderResult" style="display:none;">
        <div class="col-sm-8 col-md-offset-2">
            <div class="alert alert-success" role="alert">
                Processing...
            </div>
        </div>
    </div>
</div>
@* Results block *@
<div class="container">
    <div id="ReportResult">
    </div>
</div>

<script language="javascript">
    $("#SourceString").mouseenter(function () {
        $(this).css('min-height', '250px');
        $(this).css('overflow', 'auto');
    });
    $("#SourceString").mouseout(function () {
        if ($(this).val() == "" || $(this).val().split(/\r*\n/).length <= 1) {
            $(this).css('min-height', '0px');
            $(this).css('overflow', 'hidden');
        }
    });
</script>
